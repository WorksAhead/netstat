// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: huawei_api_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "huawei_api_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace huawei {
namespace api {
class HuaweiApiMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HuaweiApiMessage> {
  public:
  const ::huawei::api::ApplyQosRequest* apply_qos_request_;
  const ::huawei::api::ApplyQosResponse* apply_qos_response_;
  const ::huawei::api::RemoveQosRequest* remove_qos_request_;
  const ::huawei::api::RemoveQosResponse* remove_qos_response_;
  const ::huawei::api::HeartbeatRequest* heartbeat_request_;
  const ::huawei::api::HeartbeatResponse* heartbeat_response_;
} _HuaweiApiMessage_default_instance_;
class ApplyQosRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ApplyQosRequest> {
} _ApplyQosRequest_default_instance_;
class ApplyQosResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ApplyQosResponse> {
} _ApplyQosResponse_default_instance_;
class RemoveQosRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RemoveQosRequest> {
} _RemoveQosRequest_default_instance_;
class RemoveQosResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RemoveQosResponse> {
} _RemoveQosResponse_default_instance_;
class HeartbeatRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatRequest> {
} _HeartbeatRequest_default_instance_;
class HeartbeatResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatResponse> {
} _HeartbeatResponse_default_instance_;

namespace protobuf_huawei_5fapi_5fmessage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuaweiApiMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuaweiApiMessage, _oneof_case_[0]),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_HuaweiApiMessage_default_instance_), apply_qos_request_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_HuaweiApiMessage_default_instance_), apply_qos_response_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_HuaweiApiMessage_default_instance_), remove_qos_request_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_HuaweiApiMessage_default_instance_), remove_qos_response_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_HuaweiApiMessage_default_instance_), heartbeat_request_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_HuaweiApiMessage_default_instance_), heartbeat_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuaweiApiMessage, message_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyQosRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyQosRequest, local_ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyQosResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyQosResponse, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyQosResponse, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveQosRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveQosResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveQosResponse, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveQosResponse, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(HuaweiApiMessage)},
  { 11, -1, sizeof(ApplyQosRequest)},
  { 16, -1, sizeof(ApplyQosResponse)},
  { 22, -1, sizeof(RemoveQosRequest)},
  { 26, -1, sizeof(RemoveQosResponse)},
  { 32, -1, sizeof(HeartbeatRequest)},
  { 36, -1, sizeof(HeartbeatResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_HuaweiApiMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ApplyQosRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ApplyQosResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveQosRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveQosResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeartbeatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeartbeatResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "huawei_api_message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _HuaweiApiMessage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ApplyQosRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ApplyQosResponse_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _RemoveQosRequest_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _RemoveQosResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _HeartbeatRequest_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _HeartbeatResponse_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _HuaweiApiMessage_default_instance_.DefaultConstruct();
  _ApplyQosRequest_default_instance_.DefaultConstruct();
  _ApplyQosResponse_default_instance_.DefaultConstruct();
  _RemoveQosRequest_default_instance_.DefaultConstruct();
  _RemoveQosResponse_default_instance_.DefaultConstruct();
  _HeartbeatRequest_default_instance_.DefaultConstruct();
  _HeartbeatResponse_default_instance_.DefaultConstruct();
  _HuaweiApiMessage_default_instance_.apply_qos_request_ = const_cast< ::huawei::api::ApplyQosRequest*>(
      ::huawei::api::ApplyQosRequest::internal_default_instance());
  _HuaweiApiMessage_default_instance_.apply_qos_response_ = const_cast< ::huawei::api::ApplyQosResponse*>(
      ::huawei::api::ApplyQosResponse::internal_default_instance());
  _HuaweiApiMessage_default_instance_.remove_qos_request_ = const_cast< ::huawei::api::RemoveQosRequest*>(
      ::huawei::api::RemoveQosRequest::internal_default_instance());
  _HuaweiApiMessage_default_instance_.remove_qos_response_ = const_cast< ::huawei::api::RemoveQosResponse*>(
      ::huawei::api::RemoveQosResponse::internal_default_instance());
  _HuaweiApiMessage_default_instance_.heartbeat_request_ = const_cast< ::huawei::api::HeartbeatRequest*>(
      ::huawei::api::HeartbeatRequest::internal_default_instance());
  _HuaweiApiMessage_default_instance_.heartbeat_response_ = const_cast< ::huawei::api::HeartbeatResponse*>(
      ::huawei::api::HeartbeatResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\030huawei_api_message.proto\022\nhuawei.api\"\212"
      "\003\n\020HuaweiApiMessage\0228\n\021apply_qos_request"
      "\030\001 \001(\0132\033.huawei.api.ApplyQosRequestH\000\022:\n"
      "\022apply_qos_response\030\002 \001(\0132\034.huawei.api.A"
      "pplyQosResponseH\000\022:\n\022remove_qos_request\030"
      "\003 \001(\0132\034.huawei.api.RemoveQosRequestH\000\022<\n"
      "\023remove_qos_response\030\004 \001(\0132\035.huawei.api."
      "RemoveQosResponseH\000\0229\n\021heartbeat_request"
      "\030\005 \001(\0132\034.huawei.api.HeartbeatRequestH\000\022;"
      "\n\022heartbeat_response\030\006 \001(\0132\035.huawei.api."
      "HeartbeatResponseH\000B\016\n\014message_type\"#\n\017A"
      "pplyQosRequest\022\020\n\010local_ip\030\001 \001(\t\"M\n\020Appl"
      "yQosResponse\022)\n\nerror_code\030\001 \001(\0162\025.huawe"
      "i.api.ErrorCode\022\016\n\006reason\030\002 \001(\t\"\022\n\020Remov"
      "eQosRequest\"N\n\021RemoveQosResponse\022)\n\nerro"
      "r_code\030\001 \001(\0162\025.huawei.api.ErrorCode\022\016\n\006r"
      "eason\030\002 \001(\t\"\022\n\020HeartbeatRequest\"\023\n\021Heart"
      "beatResponse*\227\001\n\tErrorCode\022\023\n\017ERROR_CODE"
      "_NONE\020\000\022\026\n\022ERROR_CODE_UNKNOWN\020\001\022\032\n\026ERROR"
      "_CODE_INVALID_MSG\020\002\022\037\n\033ERROR_CODE_APPLY_"
      "QOS_FAILED\020\003\022 \n\034ERROR_CODE_REMOVE_QOS_FA"
      "ILED\020\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 854);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "huawei_api_message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_huawei_5fapi_5fmessage_2eproto

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_enum_descriptors[0];
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HuaweiApiMessage::kApplyQosRequestFieldNumber;
const int HuaweiApiMessage::kApplyQosResponseFieldNumber;
const int HuaweiApiMessage::kRemoveQosRequestFieldNumber;
const int HuaweiApiMessage::kRemoveQosResponseFieldNumber;
const int HuaweiApiMessage::kHeartbeatRequestFieldNumber;
const int HuaweiApiMessage::kHeartbeatResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HuaweiApiMessage::HuaweiApiMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:huawei.api.HuaweiApiMessage)
}
HuaweiApiMessage::HuaweiApiMessage(const HuaweiApiMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_message_type();
  switch (from.message_type_case()) {
    case kApplyQosRequest: {
      mutable_apply_qos_request()->::huawei::api::ApplyQosRequest::MergeFrom(from.apply_qos_request());
      break;
    }
    case kApplyQosResponse: {
      mutable_apply_qos_response()->::huawei::api::ApplyQosResponse::MergeFrom(from.apply_qos_response());
      break;
    }
    case kRemoveQosRequest: {
      mutable_remove_qos_request()->::huawei::api::RemoveQosRequest::MergeFrom(from.remove_qos_request());
      break;
    }
    case kRemoveQosResponse: {
      mutable_remove_qos_response()->::huawei::api::RemoveQosResponse::MergeFrom(from.remove_qos_response());
      break;
    }
    case kHeartbeatRequest: {
      mutable_heartbeat_request()->::huawei::api::HeartbeatRequest::MergeFrom(from.heartbeat_request());
      break;
    }
    case kHeartbeatResponse: {
      mutable_heartbeat_response()->::huawei::api::HeartbeatResponse::MergeFrom(from.heartbeat_response());
      break;
    }
    case MESSAGE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:huawei.api.HuaweiApiMessage)
}

void HuaweiApiMessage::SharedCtor() {
  clear_has_message_type();
  _cached_size_ = 0;
}

HuaweiApiMessage::~HuaweiApiMessage() {
  // @@protoc_insertion_point(destructor:huawei.api.HuaweiApiMessage)
  SharedDtor();
}

void HuaweiApiMessage::SharedDtor() {
  if (has_message_type()) {
    clear_message_type();
  }
}

void HuaweiApiMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HuaweiApiMessage::descriptor() {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[0].descriptor;
}

const HuaweiApiMessage& HuaweiApiMessage::default_instance() {
  protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

HuaweiApiMessage* HuaweiApiMessage::New(::google::protobuf::Arena* arena) const {
  HuaweiApiMessage* n = new HuaweiApiMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HuaweiApiMessage::clear_message_type() {
// @@protoc_insertion_point(one_of_clear_start:huawei.api.HuaweiApiMessage)
  switch (message_type_case()) {
    case kApplyQosRequest: {
      delete message_type_.apply_qos_request_;
      break;
    }
    case kApplyQosResponse: {
      delete message_type_.apply_qos_response_;
      break;
    }
    case kRemoveQosRequest: {
      delete message_type_.remove_qos_request_;
      break;
    }
    case kRemoveQosResponse: {
      delete message_type_.remove_qos_response_;
      break;
    }
    case kHeartbeatRequest: {
      delete message_type_.heartbeat_request_;
      break;
    }
    case kHeartbeatResponse: {
      delete message_type_.heartbeat_response_;
      break;
    }
    case MESSAGE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_TYPE_NOT_SET;
}


void HuaweiApiMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:huawei.api.HuaweiApiMessage)
  clear_message_type();
}

bool HuaweiApiMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:huawei.api.HuaweiApiMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .huawei.api.ApplyQosRequest apply_qos_request = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_apply_qos_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .huawei.api.ApplyQosResponse apply_qos_response = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_apply_qos_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .huawei.api.RemoveQosRequest remove_qos_request = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remove_qos_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .huawei.api.RemoveQosResponse remove_qos_response = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remove_qos_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .huawei.api.HeartbeatRequest heartbeat_request = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heartbeat_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .huawei.api.HeartbeatResponse heartbeat_response = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heartbeat_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:huawei.api.HuaweiApiMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:huawei.api.HuaweiApiMessage)
  return false;
#undef DO_
}

void HuaweiApiMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:huawei.api.HuaweiApiMessage)
  // .huawei.api.ApplyQosRequest apply_qos_request = 1;
  if (has_apply_qos_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *message_type_.apply_qos_request_, output);
  }

  // .huawei.api.ApplyQosResponse apply_qos_response = 2;
  if (has_apply_qos_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *message_type_.apply_qos_response_, output);
  }

  // .huawei.api.RemoveQosRequest remove_qos_request = 3;
  if (has_remove_qos_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *message_type_.remove_qos_request_, output);
  }

  // .huawei.api.RemoveQosResponse remove_qos_response = 4;
  if (has_remove_qos_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *message_type_.remove_qos_response_, output);
  }

  // .huawei.api.HeartbeatRequest heartbeat_request = 5;
  if (has_heartbeat_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *message_type_.heartbeat_request_, output);
  }

  // .huawei.api.HeartbeatResponse heartbeat_response = 6;
  if (has_heartbeat_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *message_type_.heartbeat_response_, output);
  }

  // @@protoc_insertion_point(serialize_end:huawei.api.HuaweiApiMessage)
}

::google::protobuf::uint8* HuaweiApiMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:huawei.api.HuaweiApiMessage)
  // .huawei.api.ApplyQosRequest apply_qos_request = 1;
  if (has_apply_qos_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *message_type_.apply_qos_request_, false, target);
  }

  // .huawei.api.ApplyQosResponse apply_qos_response = 2;
  if (has_apply_qos_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *message_type_.apply_qos_response_, false, target);
  }

  // .huawei.api.RemoveQosRequest remove_qos_request = 3;
  if (has_remove_qos_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *message_type_.remove_qos_request_, false, target);
  }

  // .huawei.api.RemoveQosResponse remove_qos_response = 4;
  if (has_remove_qos_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *message_type_.remove_qos_response_, false, target);
  }

  // .huawei.api.HeartbeatRequest heartbeat_request = 5;
  if (has_heartbeat_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *message_type_.heartbeat_request_, false, target);
  }

  // .huawei.api.HeartbeatResponse heartbeat_response = 6;
  if (has_heartbeat_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *message_type_.heartbeat_response_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:huawei.api.HuaweiApiMessage)
  return target;
}

size_t HuaweiApiMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:huawei.api.HuaweiApiMessage)
  size_t total_size = 0;

  switch (message_type_case()) {
    // .huawei.api.ApplyQosRequest apply_qos_request = 1;
    case kApplyQosRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_type_.apply_qos_request_);
      break;
    }
    // .huawei.api.ApplyQosResponse apply_qos_response = 2;
    case kApplyQosResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_type_.apply_qos_response_);
      break;
    }
    // .huawei.api.RemoveQosRequest remove_qos_request = 3;
    case kRemoveQosRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_type_.remove_qos_request_);
      break;
    }
    // .huawei.api.RemoveQosResponse remove_qos_response = 4;
    case kRemoveQosResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_type_.remove_qos_response_);
      break;
    }
    // .huawei.api.HeartbeatRequest heartbeat_request = 5;
    case kHeartbeatRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_type_.heartbeat_request_);
      break;
    }
    // .huawei.api.HeartbeatResponse heartbeat_response = 6;
    case kHeartbeatResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_type_.heartbeat_response_);
      break;
    }
    case MESSAGE_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HuaweiApiMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:huawei.api.HuaweiApiMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const HuaweiApiMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HuaweiApiMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:huawei.api.HuaweiApiMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:huawei.api.HuaweiApiMessage)
    MergeFrom(*source);
  }
}

void HuaweiApiMessage::MergeFrom(const HuaweiApiMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:huawei.api.HuaweiApiMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  switch (from.message_type_case()) {
    case kApplyQosRequest: {
      mutable_apply_qos_request()->::huawei::api::ApplyQosRequest::MergeFrom(from.apply_qos_request());
      break;
    }
    case kApplyQosResponse: {
      mutable_apply_qos_response()->::huawei::api::ApplyQosResponse::MergeFrom(from.apply_qos_response());
      break;
    }
    case kRemoveQosRequest: {
      mutable_remove_qos_request()->::huawei::api::RemoveQosRequest::MergeFrom(from.remove_qos_request());
      break;
    }
    case kRemoveQosResponse: {
      mutable_remove_qos_response()->::huawei::api::RemoveQosResponse::MergeFrom(from.remove_qos_response());
      break;
    }
    case kHeartbeatRequest: {
      mutable_heartbeat_request()->::huawei::api::HeartbeatRequest::MergeFrom(from.heartbeat_request());
      break;
    }
    case kHeartbeatResponse: {
      mutable_heartbeat_response()->::huawei::api::HeartbeatResponse::MergeFrom(from.heartbeat_response());
      break;
    }
    case MESSAGE_TYPE_NOT_SET: {
      break;
    }
  }
}

void HuaweiApiMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:huawei.api.HuaweiApiMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuaweiApiMessage::CopyFrom(const HuaweiApiMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:huawei.api.HuaweiApiMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuaweiApiMessage::IsInitialized() const {
  return true;
}

void HuaweiApiMessage::Swap(HuaweiApiMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HuaweiApiMessage::InternalSwap(HuaweiApiMessage* other) {
  std::swap(message_type_, other->message_type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HuaweiApiMessage::GetMetadata() const {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HuaweiApiMessage

// .huawei.api.ApplyQosRequest apply_qos_request = 1;
bool HuaweiApiMessage::has_apply_qos_request() const {
  return message_type_case() == kApplyQosRequest;
}
void HuaweiApiMessage::set_has_apply_qos_request() {
  _oneof_case_[0] = kApplyQosRequest;
}
void HuaweiApiMessage::clear_apply_qos_request() {
  if (has_apply_qos_request()) {
    delete message_type_.apply_qos_request_;
    clear_has_message_type();
  }
}
 const ::huawei::api::ApplyQosRequest& HuaweiApiMessage::apply_qos_request() const {
  // @@protoc_insertion_point(field_get:huawei.api.HuaweiApiMessage.apply_qos_request)
  return has_apply_qos_request()
      ? *message_type_.apply_qos_request_
      : ::huawei::api::ApplyQosRequest::default_instance();
}
::huawei::api::ApplyQosRequest* HuaweiApiMessage::mutable_apply_qos_request() {
  if (!has_apply_qos_request()) {
    clear_message_type();
    set_has_apply_qos_request();
    message_type_.apply_qos_request_ = new ::huawei::api::ApplyQosRequest;
  }
  // @@protoc_insertion_point(field_mutable:huawei.api.HuaweiApiMessage.apply_qos_request)
  return message_type_.apply_qos_request_;
}
::huawei::api::ApplyQosRequest* HuaweiApiMessage::release_apply_qos_request() {
  // @@protoc_insertion_point(field_release:huawei.api.HuaweiApiMessage.apply_qos_request)
  if (has_apply_qos_request()) {
    clear_has_message_type();
    ::huawei::api::ApplyQosRequest* temp = message_type_.apply_qos_request_;
    message_type_.apply_qos_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HuaweiApiMessage::set_allocated_apply_qos_request(::huawei::api::ApplyQosRequest* apply_qos_request) {
  clear_message_type();
  if (apply_qos_request) {
    set_has_apply_qos_request();
    message_type_.apply_qos_request_ = apply_qos_request;
  }
  // @@protoc_insertion_point(field_set_allocated:huawei.api.HuaweiApiMessage.apply_qos_request)
}

// .huawei.api.ApplyQosResponse apply_qos_response = 2;
bool HuaweiApiMessage::has_apply_qos_response() const {
  return message_type_case() == kApplyQosResponse;
}
void HuaweiApiMessage::set_has_apply_qos_response() {
  _oneof_case_[0] = kApplyQosResponse;
}
void HuaweiApiMessage::clear_apply_qos_response() {
  if (has_apply_qos_response()) {
    delete message_type_.apply_qos_response_;
    clear_has_message_type();
  }
}
 const ::huawei::api::ApplyQosResponse& HuaweiApiMessage::apply_qos_response() const {
  // @@protoc_insertion_point(field_get:huawei.api.HuaweiApiMessage.apply_qos_response)
  return has_apply_qos_response()
      ? *message_type_.apply_qos_response_
      : ::huawei::api::ApplyQosResponse::default_instance();
}
::huawei::api::ApplyQosResponse* HuaweiApiMessage::mutable_apply_qos_response() {
  if (!has_apply_qos_response()) {
    clear_message_type();
    set_has_apply_qos_response();
    message_type_.apply_qos_response_ = new ::huawei::api::ApplyQosResponse;
  }
  // @@protoc_insertion_point(field_mutable:huawei.api.HuaweiApiMessage.apply_qos_response)
  return message_type_.apply_qos_response_;
}
::huawei::api::ApplyQosResponse* HuaweiApiMessage::release_apply_qos_response() {
  // @@protoc_insertion_point(field_release:huawei.api.HuaweiApiMessage.apply_qos_response)
  if (has_apply_qos_response()) {
    clear_has_message_type();
    ::huawei::api::ApplyQosResponse* temp = message_type_.apply_qos_response_;
    message_type_.apply_qos_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HuaweiApiMessage::set_allocated_apply_qos_response(::huawei::api::ApplyQosResponse* apply_qos_response) {
  clear_message_type();
  if (apply_qos_response) {
    set_has_apply_qos_response();
    message_type_.apply_qos_response_ = apply_qos_response;
  }
  // @@protoc_insertion_point(field_set_allocated:huawei.api.HuaweiApiMessage.apply_qos_response)
}

// .huawei.api.RemoveQosRequest remove_qos_request = 3;
bool HuaweiApiMessage::has_remove_qos_request() const {
  return message_type_case() == kRemoveQosRequest;
}
void HuaweiApiMessage::set_has_remove_qos_request() {
  _oneof_case_[0] = kRemoveQosRequest;
}
void HuaweiApiMessage::clear_remove_qos_request() {
  if (has_remove_qos_request()) {
    delete message_type_.remove_qos_request_;
    clear_has_message_type();
  }
}
 const ::huawei::api::RemoveQosRequest& HuaweiApiMessage::remove_qos_request() const {
  // @@protoc_insertion_point(field_get:huawei.api.HuaweiApiMessage.remove_qos_request)
  return has_remove_qos_request()
      ? *message_type_.remove_qos_request_
      : ::huawei::api::RemoveQosRequest::default_instance();
}
::huawei::api::RemoveQosRequest* HuaweiApiMessage::mutable_remove_qos_request() {
  if (!has_remove_qos_request()) {
    clear_message_type();
    set_has_remove_qos_request();
    message_type_.remove_qos_request_ = new ::huawei::api::RemoveQosRequest;
  }
  // @@protoc_insertion_point(field_mutable:huawei.api.HuaweiApiMessage.remove_qos_request)
  return message_type_.remove_qos_request_;
}
::huawei::api::RemoveQosRequest* HuaweiApiMessage::release_remove_qos_request() {
  // @@protoc_insertion_point(field_release:huawei.api.HuaweiApiMessage.remove_qos_request)
  if (has_remove_qos_request()) {
    clear_has_message_type();
    ::huawei::api::RemoveQosRequest* temp = message_type_.remove_qos_request_;
    message_type_.remove_qos_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HuaweiApiMessage::set_allocated_remove_qos_request(::huawei::api::RemoveQosRequest* remove_qos_request) {
  clear_message_type();
  if (remove_qos_request) {
    set_has_remove_qos_request();
    message_type_.remove_qos_request_ = remove_qos_request;
  }
  // @@protoc_insertion_point(field_set_allocated:huawei.api.HuaweiApiMessage.remove_qos_request)
}

// .huawei.api.RemoveQosResponse remove_qos_response = 4;
bool HuaweiApiMessage::has_remove_qos_response() const {
  return message_type_case() == kRemoveQosResponse;
}
void HuaweiApiMessage::set_has_remove_qos_response() {
  _oneof_case_[0] = kRemoveQosResponse;
}
void HuaweiApiMessage::clear_remove_qos_response() {
  if (has_remove_qos_response()) {
    delete message_type_.remove_qos_response_;
    clear_has_message_type();
  }
}
 const ::huawei::api::RemoveQosResponse& HuaweiApiMessage::remove_qos_response() const {
  // @@protoc_insertion_point(field_get:huawei.api.HuaweiApiMessage.remove_qos_response)
  return has_remove_qos_response()
      ? *message_type_.remove_qos_response_
      : ::huawei::api::RemoveQosResponse::default_instance();
}
::huawei::api::RemoveQosResponse* HuaweiApiMessage::mutable_remove_qos_response() {
  if (!has_remove_qos_response()) {
    clear_message_type();
    set_has_remove_qos_response();
    message_type_.remove_qos_response_ = new ::huawei::api::RemoveQosResponse;
  }
  // @@protoc_insertion_point(field_mutable:huawei.api.HuaweiApiMessage.remove_qos_response)
  return message_type_.remove_qos_response_;
}
::huawei::api::RemoveQosResponse* HuaweiApiMessage::release_remove_qos_response() {
  // @@protoc_insertion_point(field_release:huawei.api.HuaweiApiMessage.remove_qos_response)
  if (has_remove_qos_response()) {
    clear_has_message_type();
    ::huawei::api::RemoveQosResponse* temp = message_type_.remove_qos_response_;
    message_type_.remove_qos_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HuaweiApiMessage::set_allocated_remove_qos_response(::huawei::api::RemoveQosResponse* remove_qos_response) {
  clear_message_type();
  if (remove_qos_response) {
    set_has_remove_qos_response();
    message_type_.remove_qos_response_ = remove_qos_response;
  }
  // @@protoc_insertion_point(field_set_allocated:huawei.api.HuaweiApiMessage.remove_qos_response)
}

// .huawei.api.HeartbeatRequest heartbeat_request = 5;
bool HuaweiApiMessage::has_heartbeat_request() const {
  return message_type_case() == kHeartbeatRequest;
}
void HuaweiApiMessage::set_has_heartbeat_request() {
  _oneof_case_[0] = kHeartbeatRequest;
}
void HuaweiApiMessage::clear_heartbeat_request() {
  if (has_heartbeat_request()) {
    delete message_type_.heartbeat_request_;
    clear_has_message_type();
  }
}
 const ::huawei::api::HeartbeatRequest& HuaweiApiMessage::heartbeat_request() const {
  // @@protoc_insertion_point(field_get:huawei.api.HuaweiApiMessage.heartbeat_request)
  return has_heartbeat_request()
      ? *message_type_.heartbeat_request_
      : ::huawei::api::HeartbeatRequest::default_instance();
}
::huawei::api::HeartbeatRequest* HuaweiApiMessage::mutable_heartbeat_request() {
  if (!has_heartbeat_request()) {
    clear_message_type();
    set_has_heartbeat_request();
    message_type_.heartbeat_request_ = new ::huawei::api::HeartbeatRequest;
  }
  // @@protoc_insertion_point(field_mutable:huawei.api.HuaweiApiMessage.heartbeat_request)
  return message_type_.heartbeat_request_;
}
::huawei::api::HeartbeatRequest* HuaweiApiMessage::release_heartbeat_request() {
  // @@protoc_insertion_point(field_release:huawei.api.HuaweiApiMessage.heartbeat_request)
  if (has_heartbeat_request()) {
    clear_has_message_type();
    ::huawei::api::HeartbeatRequest* temp = message_type_.heartbeat_request_;
    message_type_.heartbeat_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HuaweiApiMessage::set_allocated_heartbeat_request(::huawei::api::HeartbeatRequest* heartbeat_request) {
  clear_message_type();
  if (heartbeat_request) {
    set_has_heartbeat_request();
    message_type_.heartbeat_request_ = heartbeat_request;
  }
  // @@protoc_insertion_point(field_set_allocated:huawei.api.HuaweiApiMessage.heartbeat_request)
}

// .huawei.api.HeartbeatResponse heartbeat_response = 6;
bool HuaweiApiMessage::has_heartbeat_response() const {
  return message_type_case() == kHeartbeatResponse;
}
void HuaweiApiMessage::set_has_heartbeat_response() {
  _oneof_case_[0] = kHeartbeatResponse;
}
void HuaweiApiMessage::clear_heartbeat_response() {
  if (has_heartbeat_response()) {
    delete message_type_.heartbeat_response_;
    clear_has_message_type();
  }
}
 const ::huawei::api::HeartbeatResponse& HuaweiApiMessage::heartbeat_response() const {
  // @@protoc_insertion_point(field_get:huawei.api.HuaweiApiMessage.heartbeat_response)
  return has_heartbeat_response()
      ? *message_type_.heartbeat_response_
      : ::huawei::api::HeartbeatResponse::default_instance();
}
::huawei::api::HeartbeatResponse* HuaweiApiMessage::mutable_heartbeat_response() {
  if (!has_heartbeat_response()) {
    clear_message_type();
    set_has_heartbeat_response();
    message_type_.heartbeat_response_ = new ::huawei::api::HeartbeatResponse;
  }
  // @@protoc_insertion_point(field_mutable:huawei.api.HuaweiApiMessage.heartbeat_response)
  return message_type_.heartbeat_response_;
}
::huawei::api::HeartbeatResponse* HuaweiApiMessage::release_heartbeat_response() {
  // @@protoc_insertion_point(field_release:huawei.api.HuaweiApiMessage.heartbeat_response)
  if (has_heartbeat_response()) {
    clear_has_message_type();
    ::huawei::api::HeartbeatResponse* temp = message_type_.heartbeat_response_;
    message_type_.heartbeat_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void HuaweiApiMessage::set_allocated_heartbeat_response(::huawei::api::HeartbeatResponse* heartbeat_response) {
  clear_message_type();
  if (heartbeat_response) {
    set_has_heartbeat_response();
    message_type_.heartbeat_response_ = heartbeat_response;
  }
  // @@protoc_insertion_point(field_set_allocated:huawei.api.HuaweiApiMessage.heartbeat_response)
}

bool HuaweiApiMessage::has_message_type() const {
  return message_type_case() != MESSAGE_TYPE_NOT_SET;
}
void HuaweiApiMessage::clear_has_message_type() {
  _oneof_case_[0] = MESSAGE_TYPE_NOT_SET;
}
HuaweiApiMessage::MessageTypeCase HuaweiApiMessage::message_type_case() const {
  return HuaweiApiMessage::MessageTypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyQosRequest::kLocalIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyQosRequest::ApplyQosRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:huawei.api.ApplyQosRequest)
}
ApplyQosRequest::ApplyQosRequest(const ApplyQosRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_ip().size() > 0) {
    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  // @@protoc_insertion_point(copy_constructor:huawei.api.ApplyQosRequest)
}

void ApplyQosRequest::SharedCtor() {
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ApplyQosRequest::~ApplyQosRequest() {
  // @@protoc_insertion_point(destructor:huawei.api.ApplyQosRequest)
  SharedDtor();
}

void ApplyQosRequest::SharedDtor() {
  local_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApplyQosRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApplyQosRequest::descriptor() {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[1].descriptor;
}

const ApplyQosRequest& ApplyQosRequest::default_instance() {
  protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

ApplyQosRequest* ApplyQosRequest::New(::google::protobuf::Arena* arena) const {
  ApplyQosRequest* n = new ApplyQosRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApplyQosRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:huawei.api.ApplyQosRequest)
  local_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ApplyQosRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:huawei.api.ApplyQosRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string local_ip = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_ip().data(), this->local_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "huawei.api.ApplyQosRequest.local_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:huawei.api.ApplyQosRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:huawei.api.ApplyQosRequest)
  return false;
#undef DO_
}

void ApplyQosRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:huawei.api.ApplyQosRequest)
  // string local_ip = 1;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), this->local_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "huawei.api.ApplyQosRequest.local_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->local_ip(), output);
  }

  // @@protoc_insertion_point(serialize_end:huawei.api.ApplyQosRequest)
}

::google::protobuf::uint8* ApplyQosRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:huawei.api.ApplyQosRequest)
  // string local_ip = 1;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), this->local_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "huawei.api.ApplyQosRequest.local_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->local_ip(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:huawei.api.ApplyQosRequest)
  return target;
}

size_t ApplyQosRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:huawei.api.ApplyQosRequest)
  size_t total_size = 0;

  // string local_ip = 1;
  if (this->local_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApplyQosRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:huawei.api.ApplyQosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyQosRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApplyQosRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:huawei.api.ApplyQosRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:huawei.api.ApplyQosRequest)
    MergeFrom(*source);
  }
}

void ApplyQosRequest::MergeFrom(const ApplyQosRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:huawei.api.ApplyQosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.local_ip().size() > 0) {

    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
}

void ApplyQosRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:huawei.api.ApplyQosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyQosRequest::CopyFrom(const ApplyQosRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:huawei.api.ApplyQosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyQosRequest::IsInitialized() const {
  return true;
}

void ApplyQosRequest::Swap(ApplyQosRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyQosRequest::InternalSwap(ApplyQosRequest* other) {
  local_ip_.Swap(&other->local_ip_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApplyQosRequest::GetMetadata() const {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ApplyQosRequest

// string local_ip = 1;
void ApplyQosRequest::clear_local_ip() {
  local_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ApplyQosRequest::local_ip() const {
  // @@protoc_insertion_point(field_get:huawei.api.ApplyQosRequest.local_ip)
  return local_ip_.GetNoArena();
}
void ApplyQosRequest::set_local_ip(const ::std::string& value) {
  
  local_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:huawei.api.ApplyQosRequest.local_ip)
}
#if LANG_CXX11
void ApplyQosRequest::set_local_ip(::std::string&& value) {
  
  local_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:huawei.api.ApplyQosRequest.local_ip)
}
#endif
void ApplyQosRequest::set_local_ip(const char* value) {
  
  local_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:huawei.api.ApplyQosRequest.local_ip)
}
void ApplyQosRequest::set_local_ip(const char* value, size_t size) {
  
  local_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:huawei.api.ApplyQosRequest.local_ip)
}
::std::string* ApplyQosRequest::mutable_local_ip() {
  
  // @@protoc_insertion_point(field_mutable:huawei.api.ApplyQosRequest.local_ip)
  return local_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ApplyQosRequest::release_local_ip() {
  // @@protoc_insertion_point(field_release:huawei.api.ApplyQosRequest.local_ip)
  
  return local_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApplyQosRequest::set_allocated_local_ip(::std::string* local_ip) {
  if (local_ip != NULL) {
    
  } else {
    
  }
  local_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), local_ip);
  // @@protoc_insertion_point(field_set_allocated:huawei.api.ApplyQosRequest.local_ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyQosResponse::kErrorCodeFieldNumber;
const int ApplyQosResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyQosResponse::ApplyQosResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:huawei.api.ApplyQosResponse)
}
ApplyQosResponse::ApplyQosResponse(const ApplyQosResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:huawei.api.ApplyQosResponse)
}

void ApplyQosResponse::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _cached_size_ = 0;
}

ApplyQosResponse::~ApplyQosResponse() {
  // @@protoc_insertion_point(destructor:huawei.api.ApplyQosResponse)
  SharedDtor();
}

void ApplyQosResponse::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApplyQosResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApplyQosResponse::descriptor() {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[2].descriptor;
}

const ApplyQosResponse& ApplyQosResponse::default_instance() {
  protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

ApplyQosResponse* ApplyQosResponse::New(::google::protobuf::Arena* arena) const {
  ApplyQosResponse* n = new ApplyQosResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApplyQosResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:huawei.api.ApplyQosResponse)
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

bool ApplyQosResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:huawei.api.ApplyQosResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .huawei.api.ErrorCode error_code = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::huawei::api::ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "huawei.api.ApplyQosResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:huawei.api.ApplyQosResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:huawei.api.ApplyQosResponse)
  return false;
#undef DO_
}

void ApplyQosResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:huawei.api.ApplyQosResponse)
  // .huawei.api.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "huawei.api.ApplyQosResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:huawei.api.ApplyQosResponse)
}

::google::protobuf::uint8* ApplyQosResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:huawei.api.ApplyQosResponse)
  // .huawei.api.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "huawei.api.ApplyQosResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:huawei.api.ApplyQosResponse)
  return target;
}

size_t ApplyQosResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:huawei.api.ApplyQosResponse)
  size_t total_size = 0;

  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .huawei.api.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApplyQosResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:huawei.api.ApplyQosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyQosResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApplyQosResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:huawei.api.ApplyQosResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:huawei.api.ApplyQosResponse)
    MergeFrom(*source);
  }
}

void ApplyQosResponse::MergeFrom(const ApplyQosResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:huawei.api.ApplyQosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void ApplyQosResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:huawei.api.ApplyQosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyQosResponse::CopyFrom(const ApplyQosResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:huawei.api.ApplyQosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyQosResponse::IsInitialized() const {
  return true;
}

void ApplyQosResponse::Swap(ApplyQosResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyQosResponse::InternalSwap(ApplyQosResponse* other) {
  reason_.Swap(&other->reason_);
  std::swap(error_code_, other->error_code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApplyQosResponse::GetMetadata() const {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ApplyQosResponse

// .huawei.api.ErrorCode error_code = 1;
void ApplyQosResponse::clear_error_code() {
  error_code_ = 0;
}
::huawei::api::ErrorCode ApplyQosResponse::error_code() const {
  // @@protoc_insertion_point(field_get:huawei.api.ApplyQosResponse.error_code)
  return static_cast< ::huawei::api::ErrorCode >(error_code_);
}
void ApplyQosResponse::set_error_code(::huawei::api::ErrorCode value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:huawei.api.ApplyQosResponse.error_code)
}

// string reason = 2;
void ApplyQosResponse::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ApplyQosResponse::reason() const {
  // @@protoc_insertion_point(field_get:huawei.api.ApplyQosResponse.reason)
  return reason_.GetNoArena();
}
void ApplyQosResponse::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:huawei.api.ApplyQosResponse.reason)
}
#if LANG_CXX11
void ApplyQosResponse::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:huawei.api.ApplyQosResponse.reason)
}
#endif
void ApplyQosResponse::set_reason(const char* value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:huawei.api.ApplyQosResponse.reason)
}
void ApplyQosResponse::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:huawei.api.ApplyQosResponse.reason)
}
::std::string* ApplyQosResponse::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:huawei.api.ApplyQosResponse.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ApplyQosResponse::release_reason() {
  // @@protoc_insertion_point(field_release:huawei.api.ApplyQosResponse.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApplyQosResponse::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:huawei.api.ApplyQosResponse.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveQosRequest::RemoveQosRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:huawei.api.RemoveQosRequest)
}
RemoveQosRequest::RemoveQosRequest(const RemoveQosRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:huawei.api.RemoveQosRequest)
}

void RemoveQosRequest::SharedCtor() {
  _cached_size_ = 0;
}

RemoveQosRequest::~RemoveQosRequest() {
  // @@protoc_insertion_point(destructor:huawei.api.RemoveQosRequest)
  SharedDtor();
}

void RemoveQosRequest::SharedDtor() {
}

void RemoveQosRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveQosRequest::descriptor() {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[3].descriptor;
}

const RemoveQosRequest& RemoveQosRequest::default_instance() {
  protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveQosRequest* RemoveQosRequest::New(::google::protobuf::Arena* arena) const {
  RemoveQosRequest* n = new RemoveQosRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveQosRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:huawei.api.RemoveQosRequest)
}

bool RemoveQosRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:huawei.api.RemoveQosRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:huawei.api.RemoveQosRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:huawei.api.RemoveQosRequest)
  return false;
#undef DO_
}

void RemoveQosRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:huawei.api.RemoveQosRequest)
  // @@protoc_insertion_point(serialize_end:huawei.api.RemoveQosRequest)
}

::google::protobuf::uint8* RemoveQosRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:huawei.api.RemoveQosRequest)
  // @@protoc_insertion_point(serialize_to_array_end:huawei.api.RemoveQosRequest)
  return target;
}

size_t RemoveQosRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:huawei.api.RemoveQosRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveQosRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:huawei.api.RemoveQosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveQosRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveQosRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:huawei.api.RemoveQosRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:huawei.api.RemoveQosRequest)
    MergeFrom(*source);
  }
}

void RemoveQosRequest::MergeFrom(const RemoveQosRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:huawei.api.RemoveQosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void RemoveQosRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:huawei.api.RemoveQosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveQosRequest::CopyFrom(const RemoveQosRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:huawei.api.RemoveQosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveQosRequest::IsInitialized() const {
  return true;
}

void RemoveQosRequest::Swap(RemoveQosRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveQosRequest::InternalSwap(RemoveQosRequest* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveQosRequest::GetMetadata() const {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveQosRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveQosResponse::kErrorCodeFieldNumber;
const int RemoveQosResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveQosResponse::RemoveQosResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:huawei.api.RemoveQosResponse)
}
RemoveQosResponse::RemoveQosResponse(const RemoveQosResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:huawei.api.RemoveQosResponse)
}

void RemoveQosResponse::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _cached_size_ = 0;
}

RemoveQosResponse::~RemoveQosResponse() {
  // @@protoc_insertion_point(destructor:huawei.api.RemoveQosResponse)
  SharedDtor();
}

void RemoveQosResponse::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveQosResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveQosResponse::descriptor() {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[4].descriptor;
}

const RemoveQosResponse& RemoveQosResponse::default_instance() {
  protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveQosResponse* RemoveQosResponse::New(::google::protobuf::Arena* arena) const {
  RemoveQosResponse* n = new RemoveQosResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveQosResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:huawei.api.RemoveQosResponse)
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

bool RemoveQosResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:huawei.api.RemoveQosResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .huawei.api.ErrorCode error_code = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::huawei::api::ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "huawei.api.RemoveQosResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:huawei.api.RemoveQosResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:huawei.api.RemoveQosResponse)
  return false;
#undef DO_
}

void RemoveQosResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:huawei.api.RemoveQosResponse)
  // .huawei.api.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "huawei.api.RemoveQosResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:huawei.api.RemoveQosResponse)
}

::google::protobuf::uint8* RemoveQosResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:huawei.api.RemoveQosResponse)
  // .huawei.api.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "huawei.api.RemoveQosResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:huawei.api.RemoveQosResponse)
  return target;
}

size_t RemoveQosResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:huawei.api.RemoveQosResponse)
  size_t total_size = 0;

  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .huawei.api.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveQosResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:huawei.api.RemoveQosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveQosResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveQosResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:huawei.api.RemoveQosResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:huawei.api.RemoveQosResponse)
    MergeFrom(*source);
  }
}

void RemoveQosResponse::MergeFrom(const RemoveQosResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:huawei.api.RemoveQosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void RemoveQosResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:huawei.api.RemoveQosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveQosResponse::CopyFrom(const RemoveQosResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:huawei.api.RemoveQosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveQosResponse::IsInitialized() const {
  return true;
}

void RemoveQosResponse::Swap(RemoveQosResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveQosResponse::InternalSwap(RemoveQosResponse* other) {
  reason_.Swap(&other->reason_);
  std::swap(error_code_, other->error_code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveQosResponse::GetMetadata() const {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveQosResponse

// .huawei.api.ErrorCode error_code = 1;
void RemoveQosResponse::clear_error_code() {
  error_code_ = 0;
}
::huawei::api::ErrorCode RemoveQosResponse::error_code() const {
  // @@protoc_insertion_point(field_get:huawei.api.RemoveQosResponse.error_code)
  return static_cast< ::huawei::api::ErrorCode >(error_code_);
}
void RemoveQosResponse::set_error_code(::huawei::api::ErrorCode value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:huawei.api.RemoveQosResponse.error_code)
}

// string reason = 2;
void RemoveQosResponse::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RemoveQosResponse::reason() const {
  // @@protoc_insertion_point(field_get:huawei.api.RemoveQosResponse.reason)
  return reason_.GetNoArena();
}
void RemoveQosResponse::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:huawei.api.RemoveQosResponse.reason)
}
#if LANG_CXX11
void RemoveQosResponse::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:huawei.api.RemoveQosResponse.reason)
}
#endif
void RemoveQosResponse::set_reason(const char* value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:huawei.api.RemoveQosResponse.reason)
}
void RemoveQosResponse::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:huawei.api.RemoveQosResponse.reason)
}
::std::string* RemoveQosResponse::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:huawei.api.RemoveQosResponse.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RemoveQosResponse::release_reason() {
  // @@protoc_insertion_point(field_release:huawei.api.RemoveQosResponse.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RemoveQosResponse::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:huawei.api.RemoveQosResponse.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatRequest::HeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:huawei.api.HeartbeatRequest)
}
HeartbeatRequest::HeartbeatRequest(const HeartbeatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:huawei.api.HeartbeatRequest)
}

void HeartbeatRequest::SharedCtor() {
  _cached_size_ = 0;
}

HeartbeatRequest::~HeartbeatRequest() {
  // @@protoc_insertion_point(destructor:huawei.api.HeartbeatRequest)
  SharedDtor();
}

void HeartbeatRequest::SharedDtor() {
}

void HeartbeatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatRequest::descriptor() {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[5].descriptor;
}

const HeartbeatRequest& HeartbeatRequest::default_instance() {
  protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeartbeatRequest* HeartbeatRequest::New(::google::protobuf::Arena* arena) const {
  HeartbeatRequest* n = new HeartbeatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:huawei.api.HeartbeatRequest)
}

bool HeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:huawei.api.HeartbeatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:huawei.api.HeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:huawei.api.HeartbeatRequest)
  return false;
#undef DO_
}

void HeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:huawei.api.HeartbeatRequest)
  // @@protoc_insertion_point(serialize_end:huawei.api.HeartbeatRequest)
}

::google::protobuf::uint8* HeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:huawei.api.HeartbeatRequest)
  // @@protoc_insertion_point(serialize_to_array_end:huawei.api.HeartbeatRequest)
  return target;
}

size_t HeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:huawei.api.HeartbeatRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:huawei.api.HeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:huawei.api.HeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:huawei.api.HeartbeatRequest)
    MergeFrom(*source);
  }
}

void HeartbeatRequest::MergeFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:huawei.api.HeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void HeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:huawei.api.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatRequest::CopyFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:huawei.api.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatRequest::IsInitialized() const {
  return true;
}

void HeartbeatRequest::Swap(HeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatRequest::InternalSwap(HeartbeatRequest* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatRequest::GetMetadata() const {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatResponse::HeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:huawei.api.HeartbeatResponse)
}
HeartbeatResponse::HeartbeatResponse(const HeartbeatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:huawei.api.HeartbeatResponse)
}

void HeartbeatResponse::SharedCtor() {
  _cached_size_ = 0;
}

HeartbeatResponse::~HeartbeatResponse() {
  // @@protoc_insertion_point(destructor:huawei.api.HeartbeatResponse)
  SharedDtor();
}

void HeartbeatResponse::SharedDtor() {
}

void HeartbeatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatResponse::descriptor() {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[6].descriptor;
}

const HeartbeatResponse& HeartbeatResponse::default_instance() {
  protobuf_huawei_5fapi_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeartbeatResponse* HeartbeatResponse::New(::google::protobuf::Arena* arena) const {
  HeartbeatResponse* n = new HeartbeatResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:huawei.api.HeartbeatResponse)
}

bool HeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:huawei.api.HeartbeatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:huawei.api.HeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:huawei.api.HeartbeatResponse)
  return false;
#undef DO_
}

void HeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:huawei.api.HeartbeatResponse)
  // @@protoc_insertion_point(serialize_end:huawei.api.HeartbeatResponse)
}

::google::protobuf::uint8* HeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:huawei.api.HeartbeatResponse)
  // @@protoc_insertion_point(serialize_to_array_end:huawei.api.HeartbeatResponse)
  return target;
}

size_t HeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:huawei.api.HeartbeatResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:huawei.api.HeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:huawei.api.HeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:huawei.api.HeartbeatResponse)
    MergeFrom(*source);
  }
}

void HeartbeatResponse::MergeFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:huawei.api.HeartbeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void HeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:huawei.api.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatResponse::CopyFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:huawei.api.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatResponse::IsInitialized() const {
  return true;
}

void HeartbeatResponse::Swap(HeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatResponse::InternalSwap(HeartbeatResponse* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatResponse::GetMetadata() const {
  protobuf_huawei_5fapi_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_huawei_5fapi_5fmessage_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace huawei

// @@protoc_insertion_point(global_scope)
